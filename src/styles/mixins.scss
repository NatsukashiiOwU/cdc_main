@import "typography";

$breakpoints: (
  "xxl": 2560px,
  "xl": 1920px,
  "lg": 1366px,
  "md": 1024px,
  "sm": 768px,
  "xs": 375px,
  "xxs": 320px,
);

$navbarWidth: 98px;
$bannerWidth: calc(100% - 98px);

@mixin centerVertical {
  display: flex;
  align-items: center;
}

@mixin centerRow {
  @include centerVertical;
  justify-content: center;
}

@mixin centerColumn {
  @include centerRow;
  flex-direction: column;
}


@mixin mq($maxWidth, $minWidth: false, $strict: false) {
  @if map-has-key($breakpoints, $maxWidth) {
    $maxWidth: map-get($breakpoints, $maxWidth);

    @if ($minWidth != false) and map-has-key($breakpoints, $minWidth) {
      $minWidth: map-get($breakpoints, $minWidth);

      @if ($strict != false) {
        @media only screen and (max-width: $maxWidth) and (min-width: $minWidth + 1px) {
          @content;
        }
      }

      @else {
        @media only screen and (max-width: $maxWidth - 1px) and (min-width: $minWidth) {
          @content;
        }
      }
    }

    @else {
      @if ($strict != false) {
        @media only screen and (max-width: $maxWidth) {
          @content;
        }
      }

      @else {
        @media only screen and (max-width: $maxWidth - 1px) {
          @content;
        }
      }
    }
  }
}

/* stylelint-disable */
@mixin clamp($lines_count) {
  display: flex;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines_count;
}
/* stylelint-enable */

@mixin buttonReset {
  padding: 0;
  color: inherit;
  cursor: pointer;
  background: none;
  border: 0;
  border-radius: 0;
  outline: none;
  appearance: none;
}
